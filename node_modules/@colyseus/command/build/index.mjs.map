{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import type { Room } from \"colyseus\";\n\nimport debug from \"debug\";\nconst debugCommand = debug('colyseus:command');\n\nexport abstract class Command<R extends Room = Room, Payload = unknown> {\n  payload: Payload;\n\n  room: R;\n  state: R['state'];\n  clock: Room['clock'];\n\n  setPayload(payload: this['payload']) {\n    this.payload = payload;\n    return this;\n  }\n\n  validate?(payload: this['payload']): boolean;\n\n  abstract execute(payload: this['payload']):\n    Array<Command> |\n    Command |\n    void |\n    Promise<Array<Command>> |\n    Promise<Command> |\n    Promise<unknown>;\n\n  /**\n   * Delay the execution by `milliseconds`\n   * @param milliseconds\n   */\n  protected delay(milliseconds: number) {\n    return new Promise(resolve => this.clock.setTimeout(resolve, milliseconds));\n  }\n}\n\nexport class Dispatcher<R extends Room> {\n  room: R;\n  stopped: boolean = false;\n\n  constructor(room: R) {\n    this.room = room;\n  }\n\n  stop() {\n    this.stopped = true;\n  }\n\n  resume() {\n    this.stopped = false;\n  }\n\n  dispatch<T extends Command>(command: T, payload?: T['payload']): void | Promise<unknown> {\n    if (this.stopped) {\n      debugCommand(`dispatcher is stopped -> ${command.constructor.name} ${(command.payload) ? `(${JSON.stringify(command.payload)})` : ''}`);\n      return;\n    }\n\n    command.room = this.room;\n    command.state = this.room.state;\n    command.clock = this.room.clock;\n\n    if (payload) {\n      command.setPayload(payload);\n    }\n\n    if (command.validate && !command.validate(command.payload)) {\n      const commandPayload = `${(command.payload) ? `(${JSON.stringify(command.payload)})` : ''}`;\n      debugCommand(`invalid -> ${command.constructor.name} ${commandPayload}`);\n      return;\n      // throw new Error(`${command.constructor.name}: invalid -> ${commandPayload}`);\n    }\n\n    if (debugCommand.enabled) {\n      debugCommand(`execute -> ${command.constructor.name} ${(command.payload) ? `(${JSON.stringify(command.payload)})` : ''}`);\n    }\n\n    const result = command.execute(command.payload);\n\n    if (result instanceof Promise) {\n      return (result as Promise<Command[]>).then(async (childCommands) => {\n        const nextCommands = this.getNextCommands(childCommands);\n\n        for (let i = 0; i < nextCommands.length; i++) {\n          await this.dispatch(nextCommands[i]);\n        }\n      });\n    }\n\n    const nextCommands = this.getNextCommands(result)\n    const hasNextCommands = !!nextCommands.length\n\n    if (hasNextCommands) {\n      let lastResult: void | Promise<unknown>;\n\n      for (let i = 0; i < nextCommands.length; i++) {\n        if (lastResult instanceof Promise) {\n          lastResult = lastResult.then(() => this.dispatch(nextCommands[i]));\n\n        } else {\n          lastResult = this.dispatch(nextCommands[i]);\n        }\n      }\n\n      return lastResult;\n    }\n  }\n\n  // | Array<Promise<Command[] | void>>\n  private getNextCommands(nextCommands: void | Command | Command[]): Command[] {\n    if (!nextCommands) {\n      return [];\n    }\n    if (Array.isArray(nextCommands)) {\n      return nextCommands\n    }\n    return [nextCommands];\n  }\n}\n"],
  "mappings": ";AAEA,OAAO,WAAW;AAClB,IAAM,eAAe,MAAM,kBAAkB;AAEtC,IAAe,UAAf,MAAiE;AAAA,EAOtE,WAAW,SAA0B;AACnC,SAAK,UAAU;AACf,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBU,MAAM,cAAsB;AACpC,WAAO,IAAI,QAAQ,aAAW,KAAK,MAAM,WAAW,SAAS,YAAY,CAAC;AAAA,EAC5E;AACF;AAEO,IAAM,aAAN,MAAiC;AAAA,EAItC,YAAY,MAAS;AAFrB,mBAAmB;AAGjB,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,OAAO;AACL,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,SAAS;AACP,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,SAA4B,SAAY,SAAiD;AACvF,QAAI,KAAK,SAAS;AAChB,mBAAa,4BAA4B,QAAQ,YAAY,IAAI,IAAK,QAAQ,UAAW,IAAI,KAAK,UAAU,QAAQ,OAAO,CAAC,MAAM,EAAE,EAAE;AACtI;AAAA,IACF;AAEA,YAAQ,OAAO,KAAK;AACpB,YAAQ,QAAQ,KAAK,KAAK;AAC1B,YAAQ,QAAQ,KAAK,KAAK;AAE1B,QAAI,SAAS;AACX,cAAQ,WAAW,OAAO;AAAA,IAC5B;AAEA,QAAI,QAAQ,YAAY,CAAC,QAAQ,SAAS,QAAQ,OAAO,GAAG;AAC1D,YAAM,iBAAiB,GAAI,QAAQ,UAAW,IAAI,KAAK,UAAU,QAAQ,OAAO,CAAC,MAAM,EAAE;AACzF,mBAAa,cAAc,QAAQ,YAAY,IAAI,IAAI,cAAc,EAAE;AACvE;AAAA,IAEF;AAEA,QAAI,aAAa,SAAS;AACxB,mBAAa,cAAc,QAAQ,YAAY,IAAI,IAAK,QAAQ,UAAW,IAAI,KAAK,UAAU,QAAQ,OAAO,CAAC,MAAM,EAAE,EAAE;AAAA,IAC1H;AAEA,UAAM,SAAS,QAAQ,QAAQ,QAAQ,OAAO;AAE9C,QAAI,kBAAkB,SAAS;AAC7B,aAAQ,OAA8B,KAAK,OAAO,kBAAkB;AAClE,cAAMA,gBAAe,KAAK,gBAAgB,aAAa;AAEvD,iBAAS,IAAI,GAAG,IAAIA,cAAa,QAAQ,KAAK;AAC5C,gBAAM,KAAK,SAASA,cAAa,CAAC,CAAC;AAAA,QACrC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,eAAe,KAAK,gBAAgB,MAAM;AAChD,UAAM,kBAAkB,CAAC,CAAC,aAAa;AAEvC,QAAI,iBAAiB;AACnB,UAAI;AAEJ,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,YAAI,sBAAsB,SAAS;AACjC,uBAAa,WAAW,KAAK,MAAM,KAAK,SAAS,aAAa,CAAC,CAAC,CAAC;AAAA,QAEnE,OAAO;AACL,uBAAa,KAAK,SAAS,aAAa,CAAC,CAAC;AAAA,QAC5C;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA,EAGQ,gBAAgB,cAAqD;AAC3E,QAAI,CAAC,cAAc;AACjB,aAAO,CAAC;AAAA,IACV;AACA,QAAI,MAAM,QAAQ,YAAY,GAAG;AAC/B,aAAO;AAAA,IACT;AACA,WAAO,CAAC,YAAY;AAAA,EACtB;AACF;",
  "names": ["nextCommands"]
}
